The several versions of code here all solve the same problem, but allow for different inputs from the user and different output formats.

Version 1: Allows to run the program for 4 different w_r values at once (w_r values are specified within the .cpp file) and outputs all
4 groundstate eigenvectors in a single txt file for easy comparison. This is useful for a quick estimate, but since it uses the same rho_max 
for all w_r, it is not optimal in terms of accuracy. 

Version 2: Runs for a single w_r value with a user inputed (from command window) rho_max. This allows to experiment with using different
rho_max values.

Version 4: Runs for a single w_r value and finds the optimal rho_max to use automatically. This version is the most optimized code for solving
the problem but it doesn't offer the flexibility to experiment with different values of rho_max.

(Version 3 was identical to  Version 4, but less compactly coded, so it is not included here).

The main unit testing of Jacobi rotation algorithm was done in the single electron case debug version of the code. In the two electron case,
since the same eigenvalue solver algorithm is used, we only kept the comparison with Armadillo's eigenvalue solver.
